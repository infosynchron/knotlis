<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<context:property-placeholder location="/WEB-INF/spring.properties" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->

	<beans:bean id="viewResolver1"
		class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
		<beans:property name="order" value="1" />
		<beans:property name="basename" value="view" />
	</beans:bean>

	<beans:bean id="viewResolver2"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="order" value="2" />
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<context:component-scan base-package="com.liquidscientific.knotlis" />




	<!-- JDBC Data Source. It is assumed you have MySQL running on localhost 
		port 3306 with username root and blank password. Change below if it's not 
		the case -->
	<beans:bean id="localDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="org.mariadb.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mariadb://localhost:3307/knotlis" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="001FS740" />
		<beans:property name="validationQuery" value="SELECT 1" />
	</beans:bean>
	

	<!-- Hibernate Session Factory -->
	<beans:bean id="localSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="localDataSource" />
		<beans:property name="packagesToScan">
			<beans:array>
				<beans:value>com.liquidscientific.knotlis</beans:value>
			</beans:array>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:value>
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
				connection.autoReconnect=true
				connection.autoReconnectForPools=true
				connection.pool_size=500
				show_sql=true
				hbm2ddl.auto=validate
				hibernate.connection.zeroDateTimeBehavior=convertToNull
				hibernate.connection.isolation=2
			</beans:value>
		</beans:property>
	</beans:bean>


	<!-- Hibernate Transaction Manager -->
	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="localSessionFactory" />
	</beans:bean>

	<!-- Activates annotation based transaction management -->
	<tx:annotation-driven transaction-manager="transactionManager" />







</beans:beans>
